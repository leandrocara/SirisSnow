cat("Ingresando al procesamiento \n")
rm(list = ls())
library("raster")
### de acá debería salir la mod y la c.mod nada más!
rutas <- read.table("./.dir.txt",sep = ",",stringsAsFactors = F)
rcl <- function(x,y){reclassify(x, y, include.lowest=FALSE, right=NA)}
apoyo <- rutas[14,2]#"/home/lean/Dropbox/tesis/servermod/modis/apoyo/mascara_comp.tif"
apoyo <- paste0(apoyo,"mascara_comp.tif")
#mod   ##############################################################
dir.mbase <- rutas[7,2]#"/home/lean/Dropbox/tesis/servermod/modis/mod10base"
dir.mod <- rutas[5,2]#"/home/lean/Dropbox/tesis/servermod/modis/mod/"
dir.mod.c <- rutas[6,2]#"/home/lean/Dropbox/tesis/servermod/modis/c_mod/"
dir.mod.fsc <- rutas[20,2]#"/home/lean/Dropbox/tesis/servermod/modis/mod_fsc/"
#myd   ##############################################################
dir.mybase <- rutas[10,2]#"/home/lean/Dropbox/tesis/servermod/modis/myd10base"
dir.myd <- rutas[8,2]#"/home/lean/Dropbox/tesis/servermod/modis/myd/"
dir.myd.c <- rutas[9,2]#"/home/lean/Dropbox/tesis/servermod/modis/c_myd/"
dir.myd.fsc <- rutas[21,2]#"/home/lean/Dropbox/tesis/servermod/modis/myd_fsc/"
#   ##############################################################
### chequeo la info que se encuentra en mbase
if(length(list.files(dir.mbase))>=1){
p1 <- regexec("A[0-9]{6}",list.files(dir.mbase)[1])
pp1 <- dir.mbase
}else{
p1 <- regexec("A[0-9]{6}",list.files(dir.mybase)[1])
pp1 <- dir.mybase
}
p1 <- substr(list.files(pp1)[1],p1[[1]][1],p1[[1]][1]+7)
#   ##############################################################
# 0-40: Soil
# 40-100: snow cover
# 200: missing data
# 201: no decision
# 211: night
# 237: inland water
# 239: ocean
# 250: cloud
# 254: detector saturated
# 255: fill
#   ##############################################################
### lo primero que debo hacer es levantar las imágenes
## Variables temporales
### matríz para armar la imágenes de nubes
fsc.mosaic <- matrix(ncol=2,c(237,200,201,211,239,254,255,250,0,rep(NA,6),101))
FSC<- matrix(ncol = 2,data = c(-1,NA))
SCA <-as.matrix(data.frame(d1=c(-1,seq(1,101)), d2=c(2,rep(0,39),rep(1,61),2)))
CCA <-as.matrix(data.frame(d1=c(seq(-1,101)), d2=c(rep(0,102),1)))
# capa de apoyo!
bse <- (raster(apoyo)*0)-1
cat("\n")
cat(" Comenzando el proceso de reclasificación de las imágenes \n Y armado del producto combinado MOD.MYD \n")
cat(" En este proceso se calculan además todos los productos de nubes \n")
cat("iniciando la serie MOD \n")
cat("\n")
### directorio de descarga de las imágenes mod!!!
# lmyd <- list.files(path = dir.mybase,pattern = "*.tif",full.names = T)
# lmod <- list.files(path = dir.mbase,pattern = "*.tif",full.names = T)
dir1<- c(dir.mbase,dir.mybase)
dir2<- c(dir.mod.c,dir.myd.c)
dir3<- c(dir.mod,dir.myd)
dir4<- c(dir.mod.fsc,dir.myd.fsc)
dir<- c(dir.mod,dir.myd)
mcd <- list()
mcdtipo <- c("MOD10A1","MYD10A1")
cat("Ingresando al procesamiento \n")
for(m in 1:2){# m= mod y myd
cat(paste0("Comenzando a procesar ",mcdtipo[m],"\n"))
modfsc <- bse
lmod <- list.files(path = dir1[m],pattern = "*.tif$",full.names = T)
cat(paste0("Número de imágenes ",mcdtipo[m], ": ",length(lmod),"\n"))
if(length(lmod)>=1){
for(i in 1:length(lmod)){
## llamo al raster
mod <- raster(lmod[i])
xmod <- rcl(mod,fsc.mosaic)
modfsc <- mosaic(resample(xmod,bse,method="ngb"),modfsc,fun=max)
cat(paste0("paso ",i," completo\n"))}
}
### CCA
writeRaster(rcl(modfsc,CCA),paste0(dir2[m],"/",mcdtipo[m],"_",p1,"_Clouds_Cover_Area.tif"),
format="GTiff", overwrite=T,datatype="INT1U")
### SCA
writeRaster(rcl(modfsc,SCA),paste0(dir3[m],"/",mcdtipo[m],".",p1,"_Snow_Cover_Area.tif"),
format="GTiff", overwrite=T,datatype="INT1U")
### FSC
writeRaster(rcl(modfsc,FSC),paste0(dir4[m],"/",mcdtipo[m],".",p1,"_Fractional_Snow_Cover_.tif"),
format="GTiff", overwrite=T,datatype="INT1U")
# elimino los originales por ahora!!!
file.remove(lmod)
}
cat("\n")
# cat(paste0("Imagen ",p1," guardada para nieve y nubes\n"))}
cat("script mod_nieve_nubes.R terminado\n")
cat("######################\n")
rm(list = ls())
library(raster)
library(rgdal)
library(sp)
rutas <- read.table("./.dir.txt",sep = ",",stringsAsFactors = F)
# rutas <- read.table("/home/leandro/server/servermod/dir.txt",sep = ",",stringsAsFactors = F)
apoyo <- rutas[14,2]#"/home/lean/Dropbox/tesis/servermod/modis/apoyo/mascara_comp.tif"
apoyo <- paste0(apoyo,"mascara_comp.tif")
#mod   ##############################################################
dir.mbase <- rutas[7,2]#"/home/lean/Dropbox/tesis/servermod/modis/mod10base"
dir.mod <- rutas[5,2]#"/home/lean/Dropbox/tesis/servermod/modis/mod/"
dir.mod.c <- rutas[6,2]#"/home/lean/Dropbox/tesis/servermod/modis/c_mod/"
#myd   ##############################################################
dir.mybase <- rutas[10,2]#"/home/lean/Dropbox/tesis/servermod/modis/myd10base"
dir.myd <- rutas[8,2]#"/home/lean/Dropbox/tesis/servermod/modis/myd/"
dir.myd.c <- rutas[9,2]#"/home/lean/Dropbox/tesis/servermod/modis/c_myd/"
# rasterOptions(tmpdir = "/home/lean/RT")
fun.dir <- rutas[11,2]#"/home/lean/Dropbox/tesis/servermod/f_apoyo/"# ???
dir.mod.tap  <- rutas[12,2]#"/home/lean/Dropbox/tesis/servermod/modis/mod_tap/"
dir.mod  <- rutas[5,2]#"/home/lean/Dropbox/tesis/servermod/modis/mod/"
dir.myd  <- rutas[8,2]#"/home/lean/Dropbox/tesis/servermod/modis/myd/"
dir.mod.myd <- rutas[13,2]#"/home/lean/Dropbox/tesis/servermod/modis/mod_myd/"
dir.otros <- rutas[11,2]#"/home/lean/Dropbox/tesis/servermod/modis/apoyo/"
dir.mod.c <- rutas[6,2]#"/home/lean/Dropbox/tesis/servermod/modis/c_mod/"
dir.myd.c <- rutas[9,2]#"/home/lean/Dropbox/tesis/servermod/modis/c_myd/"
dir.mod.myd.c.max <-  rutas[17,2]#"/home/lean/Dropbox/tesis/servermod/modis/c_mod_myd_max/"
dir.mod.myd.c.min <-  rutas[18,2]#"/home/lean/Dropbox/tesis/servermod/modis/c_mod_myd_min/"
pos <- 10
#######################################################################
funciones<- list.files(path = fun.dir,pattern = ".R$",full.names = T)
for (i in 1:length(funciones)) source (chdir =T ,file = funciones[i])
#######################################################################
funciones<- list.files(path = fun.dir,pattern = ".R$",full.names = T)
funciones
#######################################################################
funciones<- list.files(path = fun.dir,pattern = ".R$",full.names = T)
funciones
fun.dir
rm(list = ls())
library(raster)
library(rgdal)
library(sp)
rutas <- read.table("./.dir.txt",sep = ",",stringsAsFactors = F)
# rutas <- read.table("/home/leandro/server/servermod/dir.txt",sep = ",",stringsAsFactors = F)
apoyo <- rutas[14,2]#"/home/lean/Dropbox/tesis/servermod/modis/apoyo/mascara_comp.tif"
apoyo <- paste0(apoyo,"mascara_comp.tif")
#mod   ##############################################################
dir.mbase <- rutas[7,2]#"/home/lean/Dropbox/tesis/servermod/modis/mod10base"
dir.mod <- rutas[5,2]#"/home/lean/Dropbox/tesis/servermod/modis/mod/"
dir.mod.c <- rutas[6,2]#"/home/lean/Dropbox/tesis/servermod/modis/c_mod/"
#myd   ##############################################################
dir.mybase <- rutas[10,2]#"/home/lean/Dropbox/tesis/servermod/modis/myd10base"
dir.myd <- rutas[8,2]#"/home/lean/Dropbox/tesis/servermod/modis/myd/"
dir.myd.c <- rutas[9,2]#"/home/lean/Dropbox/tesis/servermod/modis/c_myd/"
# rasterOptions(tmpdir = "/home/lean/RT")
fun.dir <- rutas[11,2]#"/home/lean/Dropbox/tesis/servermod/f_apoyo/"# ???
dir.mod.tap  <- rutas[12,2]#"/home/lean/Dropbox/tesis/servermod/modis/mod_tap/"
dir.mod  <- rutas[5,2]#"/home/lean/Dropbox/tesis/servermod/modis/mod/"
dir.myd  <- rutas[8,2]#"/home/lean/Dropbox/tesis/servermod/modis/myd/"
dir.mod.myd <- rutas[13,2]#"/home/lean/Dropbox/tesis/servermod/modis/mod_myd/"
dir.otros <- rutas[11,2]#"/home/lean/Dropbox/tesis/servermod/modis/apoyo/"
dir.mod.c <- rutas[6,2]#"/home/lean/Dropbox/tesis/servermod/modis/c_mod/"
dir.myd.c <- rutas[9,2]#"/home/lean/Dropbox/tesis/servermod/modis/c_myd/"
dir.mod.myd.c.max <-  rutas[17,2]#"/home/lean/Dropbox/tesis/servermod/modis/c_mod_myd_max/"
dir.mod.myd.c.min <-  rutas[18,2]#"/home/lean/Dropbox/tesis/servermod/modis/c_mod_myd_min/"
pos <- 10
#######################################################################
funciones<- list.files(path = fun.dir,pattern = ".R$",full.names = T)
for (i in 1:length(funciones)) source (chdir =T ,file = funciones[i])
#######################################################################
cat("\n Comenzando el prrocesamiento de los mosaicos TIF\n")
### este depende de tres funciones = [dataFill,faltantes,jday2date]
# #############
# levanto la lista de imágenes que descargó mi demonio y guardo la primera de ellas
cat("Chequeando si existen imágenes faltantes!\n")
mod<- dataFill(x =dir.mod,verbose = T,lab = "missing.tif",relleno=NA,max.data=60)
cat("\n")
cat("#########\n")
cat("\n")
myd<- dataFill(x =dir.myd,verbose = T,lab = "missing.tif",relleno=NA,max.data=60)
####################################################
cat("\nProcesamiento de SCA y CCA Para MOD10A1 y MYD10A1:\n")
lmod <- list.files(path=dir.mod,pattern = ".tif$")
lmod <- lmod[(length(lmod)-30):length(lmod)]
lmyd <- list.files(path=dir.myd,pattern = ".tif$")
lmyd <- lmyd[(length(lmyd)-30):length(lmyd)]
tpo1 <- reclas.v6(verbose = T)
### si no procesa ninguna imagen en mod.myd no pasa a mod.tap
if(length(tpo1[[1]])>0){
cat(paste0("\nprimera imágen MOD.MYD procesada: ",jd2date(min(as.numeric(tpo1[[1]]))),"\n"))
}else{
cat("no se tienen imágenes para procesar a MOD-MYD hoy \n")
}
# ###################################################
### LISTO TODAS LAS IMÁGENES MOD-TAP
lmodmyd <- list.files(path=dir.mod.myd,pattern = ".tif$")
### SI HE CREADO ALGUNA MOD.MYD ENTONCES PASO A PROCESAR MOD-TAP
if(length(tpo1[[1]])>0){
lmodmyd <- subset(lmodmyd,as.numeric(corte(lmodmyd))>=min(as.numeric(tpo1[[1]])))
tpo2 <- mod.tap.series.full()
}else{
cat("no se tienen imágenes para procesar a MOD-TAP hoy \n")
}
cat("script mosaic_to_mxd_SCA_CCA.R terminado\n")
cat("######################################\n")
read
list.files("/home/lean/DATASETS/modis/mod_tap/")
as.numeric(subsrt(list.files("/home/lean/DATASETS/modis/mod_tap/"),10,16))
as.numeric(substr(list.files("/home/lean/DATASETS/modis/mod_tap/"),10,16))
x <- as.numeric(substr(list.files("/home/lean/DATASETS/modis/mod_tap/"),10,16))
x <- as.numeric(substr(list.files("/home/lean/DATASETS/modis/mod_tap/"),10,16))
x
as.numeric(substr(list.files("/home/lean/DATASETS/modis/mod_tap/"),10,16))
faltantes(x)
x <- as.numeric(substr()
faltantes(list.files("/home/lean/DATASETS/modis/mod_tap/"),10,16))
faltantes(list.files("/home/lean/DATASETS/modis/mod_tap/"),10,16))
faltantes(list.files("/home/lean/DATASETS/modis/mod_tap/"),10,16)
rm(list = ls())
suppressMessages(library("raster"))
### de acá debería salir la mod y la c.mod nada más!
rutas <- read.table("./.dir.txt",sep = ",",stringsAsFactors = F)
rcl <- function(x,y){reclassify(x, y, include.lowest=FALSE, right=NA)}
apoyo <- rutas[14,2]#"/home/lean/Dropbox/tesis/servermod/modis/apoyo/mascara_comp.tif"
apoyo <- paste0(apoyo,"mascara_comp.tif")
#mod   ##############################################################
dir.mbase <- rutas[7,2]#"/home/lean/Dropbox/tesis/servermod/modis/mod10base"
dir.mod <- rutas[5,2]#"/home/lean/Dropbox/tesis/servermod/modis/mod/"
dir.mod.c <- rutas[6,2]#"/home/lean/Dropbox/tesis/servermod/modis/c_mod/"
dir.mod.fsc <- rutas[20,2]#"/home/lean/Dropbox/tesis/servermod/modis/mod_fsc/"
#myd   ##############################################################
dir.mybase <- rutas[10,2]#"/home/lean/Dropbox/tesis/servermod/modis/myd10base"
dir.myd <- rutas[8,2]#"/home/lean/Dropbox/tesis/servermod/modis/myd/"
dir.myd.c <- rutas[9,2]#"/home/lean/Dropbox/tesis/servermod/modis/c_myd/"
dir.myd.fsc <- rutas[21,2]#"/home/lean/Dropbox/tesis/servermod/modis/myd_fsc/"
rm(list = ls())
suppressMessages(library("raster"))
### de acá debería salir la mod y la c.mod nada más!
rutas <- read.table("./.dir.txt",sep = ",",stringsAsFactors = F)
rutas
rcl <- function(x,y){reclassify(x, y, include.lowest=FALSE, right=NA)}
apoyo <- rutas[14,2]#"/home/lean/Dropbox/tesis/servermod/modis/apoyo/mascara_comp.tif"
apoyo <- paste0(apoyo,"mascara_comp.tif")
#mod   ##############################################################
dir.mbase <- rutas[7,2]#"/home/lean/Dropbox/tesis/servermod/modis/mod10base"
dir.mod <- rutas[5,2]#"/home/lean/Dropbox/tesis/servermod/modis/mod/"
dir.mod.c <- rutas[6,2]#"/home/lean/Dropbox/tesis/servermod/modis/c_mod/"
dir.mod.fsc <- rutas[20,2]#"/home/lean/Dropbox/tesis/servermod/modis/mod_fsc/"
#myd   ##############################################################
dir.mybase <- rutas[10,2]#"/home/lean/Dropbox/tesis/servermod/modis/myd10base"
dir.myd <- rutas[8,2]#"/home/lean/Dropbox/tesis/servermod/modis/myd/"
dir.myd.c <- rutas[9,2]#"/home/lean/Dropbox/tesis/servermod/modis/c_myd/"
dir.myd.fsc <- rutas[21,2]#"/home/lean/Dropbox/tesis/servermod/modis/myd_fsc/"
(length(list.files(dir.mbase))>=1)
length(list.files(dir.mbase)
length(list.files(dir.mbase))
length(list.files(dir.mbase))
p1 <- regexec("A[0-9]{6}",list.files(dir.mbase)[1])
pp1 <- dir.mbase
p1
p1 <- substr(list.files(pp1)[1],p1[[1]][1],p1[[1]][1]+7)
p1
### lo primero que debo hacer es levantar las imágenes
## Variables temporales
### matríz para armar la imágenes de nubes
fsc.mosaic <- matrix(ncol=2,c(237,200,201,211,239,254,255,250,0,rep(NA,6),101))
fsc.mosaic
FSC<- matrix(ncol = 2,data = c(-1,NA))
SCA <-as.matrix(data.frame(d1=c(-1,seq(1,101)), d2=c(2,rep(0,39),rep(1,61),2)))
CCA <-as.matrix(data.frame(d1=c(seq(-1,101)), d2=c(rep(0,102),1)))
# capa de apoyo!
bse <- (raster(apoyo)*0)-1
cat("\n")
cat(" Comenzando el proceso de reclasificación de las imágenes \n Y armado del producto combinado MOD.MYD \n")
cat(" En este proceso se calculan además todos los productos de nubes \n")
cat("iniciando la serie MOD \n")
cat("\n")
### directorio de descarga de las imágenes mod!!!
# lmyd <- list.files(path = dir.mybase,pattern = "*.tif",full.names = T)
# lmod <- list.files(path = dir.mbase,pattern = "*.tif",full.names = T)
dir1<- c(dir.mbase,dir.mybase)
dir2<- c(dir.mod.c,dir.myd.c)
dir3<- c(dir.mod,dir.myd)
dir4<- c(dir.mod.fsc,dir.myd.fsc)
dir<- c(dir.mod,dir.myd)
mcd <- list()
mcdtipo <- c("MOD10A1","MYD10A1")
cat("Ingresando al procesamiento \n")
for(m in 1:2){# m= mod y myd
cat(paste0("Comenzando a procesar ",mcdtipo[m],"\n"))
modfsc <- bse
lmod <- list.files(path = dir1[m],pattern = "*.tif$",full.names = T)
cat(paste0("Número de imágenes ",mcdtipo[m], ": ",length(lmod),"\n"))
if(length(lmod)>=1){
for(i in 1:length(lmod)){
## llamo al raster
mod <- raster(lmod[i])
xmod <- rcl(mod,fsc.mosaic)
modfsc <- mosaic(resample(xmod,bse,method="ngb"),modfsc,fun=max)
cat(paste0("paso ",i," completo\n"))}
}
### CCA
writeRaster(rcl(modfsc,CCA),paste0(dir2[m],"/",mcdtipo[m],"_",p1,"_Clouds_Cover_Area.tif"),
format="GTiff", overwrite=T,datatype="INT1U")
### SCA
writeRaster(rcl(modfsc,SCA),paste0(dir3[m],"/",mcdtipo[m],".",p1,"_Snow_Cover_Area.tif"),
format="GTiff", overwrite=T,datatype="INT1U")
### FSC
writeRaster(rcl(modfsc,FSC),paste0(dir4[m],"/",mcdtipo[m],".",p1,"_Fractional_Snow_Cover_.tif"),
format="GTiff", overwrite=T,datatype="INT1U")
# elimino los originales por ahora!!!
file.remove(lmod)
}
rm(list = ls())
suppressMessages(library("raster"))
### de acá debería salir la mod y la c.mod nada más!
rutas <- read.table("./.dir.txt",sep = ",",stringsAsFactors = F)
rcl <- function(x,y){reclassify(x, y, include.lowest=FALSE, right=NA)}
apoyo <- rutas[14,2]#"/home/lean/Dropbox/tesis/servermod/modis/apoyo/mascara_comp.tif"
apoyo <- paste0(apoyo,"mascara_comp.tif")
#mod   ##############################################################
dir.mbase <- rutas[7,2]#"/home/lean/Dropbox/tesis/servermod/modis/mod10base"
dir.mod <- rutas[5,2]#"/home/lean/Dropbox/tesis/servermod/modis/mod/"
dir.mod.c <- rutas[6,2]#"/home/lean/Dropbox/tesis/servermod/modis/c_mod/"
dir.mod.fsc <- rutas[20,2]#"/home/lean/Dropbox/tesis/servermod/modis/mod_fsc/"
#myd   ##############################################################
dir.mybase <- rutas[10,2]#"/home/lean/Dropbox/tesis/servermod/modis/myd10base"
dir.myd <- rutas[8,2]#"/home/lean/Dropbox/tesis/servermod/modis/myd/"
dir.myd.c <- rutas[9,2]#"/home/lean/Dropbox/tesis/servermod/modis/c_myd/"
dir.myd.fsc <- rutas[21,2]#"/home/lean/Dropbox/tesis/servermod/modis/myd_fsc/"
#   ##############################################################
### chequeo la info que se encuentra en mbase
if(length(list.files(dir.mbase))>=1){
p1 <- regexec("A[0-9]{6}",list.files(dir.mbase)[1])
pp1 <- dir.mbase
}else{
p1 <- regexec("A[0-9]{6}",list.files(dir.mybase)[1])
pp1 <- dir.mybase
}
p1 <- substr(list.files(pp1)[1],p1[[1]][1],p1[[1]][1]+7)
### lo primero que debo hacer es levantar las imágenes
## Variables temporales
### matríz para armar la imágenes de nubes
fsc.mosaic <- matrix(ncol=2,c(237,200,201,211,239,254,255,250,0,rep(NA,6),101))
FSC<- matrix(ncol = 2,data = c(-1,NA))
SCA <-as.matrix(data.frame(d1=c(-1,seq(1,101)), d2=c(2,rep(0,39),rep(1,61),2)))
CCA <-as.matrix(data.frame(d1=c(seq(-1,101)), d2=c(rep(0,102),1)))
# capa de apoyo!
bse <- (raster(apoyo)*0)-1
cat("\n")
cat(" Comenzando el proceso de reclasificación de las imágenes \n Y armado del producto combinado MOD.MYD \n")
cat(" En este proceso se calculan además todos los productos de nubes \n")
cat("iniciando la serie MOD \n")
cat("\n")
### directorio de descarga de las imágenes mod!!!
# lmyd <- list.files(path = dir.mybase,pattern = "*.tif",full.names = T)
# lmod <- list.files(path = dir.mbase,pattern = "*.tif",full.names = T)
dir1<- c(dir.mbase,dir.mybase)
dir2<- c(dir.mod.c,dir.myd.c)
dir3<- c(dir.mod,dir.myd)
dir4<- c(dir.mod.fsc,dir.myd.fsc)
dir<- c(dir.mod,dir.myd)
mcd <- list()
mcdtipo <- c("MOD10A1","MYD10A1")
cat("Ingresando al procesamiento \n")
m
m=1
cat("Ingresando al procesamiento \n")
cat(paste0("Comenzando a procesar ",mcdtipo[m],"\n"))
modfsc <- bse
lmod <- list.files(path = dir1[m],pattern = "*.tif$",full.names = T)
cat(paste0("Número de imágenes ",mcdtipo[m], ": ",length(lmod),"\n"))
(length(lmod)>=1)
lmod
lmod
dir1[m]
lmod <- list.files(path = dir1[m],pattern = "*.tif$",full.names = T)
lmod
cat(paste0("Número de imágenes ",mcdtipo[m], ": ",length(lmod),"\n"))
(length(lmod)>=1)
i=1
## llamo al raster
mod <- raster(lmod[i])
xmod <- rcl(mod,fsc.mosaic)
modfsc <- mosaic(resample(xmod,bse,method="ngb"),modfsc,fun=max)
cat(paste0("paso ",i," completo\n"))}
cat(paste0("paso ",i," completo\n"))
i=2
## llamo al raster
mod <- raster(lmod[i])
xmod <- rcl(mod,fsc.mosaic)
modfsc <- mosaic(resample(xmod,bse,method="ngb"),modfsc,fun=max)
i=3
## llamo al raster
mod <- raster(lmod[i])
xmod <- rcl(mod,fsc.mosaic)
modfsc <- mosaic(resample(xmod,bse,method="ngb"),modfsc,fun=max)
i=4
## llamo al raster
mod <- raster(lmod[i])
xmod <- rcl(mod,fsc.mosaic)
modfsc <- mosaic(resample(xmod,bse,method="ngb"),modfsc,fun=max)
i=5
## llamo al raster
mod <- raster(lmod[i])
xmod <- rcl(mod,fsc.mosaic)
modfsc <- mosaic(resample(xmod,bse,method="ngb"),modfsc,fun=max)
i=6
## llamo al raster
mod <- raster(lmod[i])
xmod <- rcl(mod,fsc.mosaic)
modfsc <- mosaic(resample(xmod,bse,method="ngb"),modfsc,fun=max)
i=7
## llamo al raster
mod <- raster(lmod[i])
xmod <- rcl(mod,fsc.mosaic)
modfsc <- mosaic(resample(xmod,bse,method="ngb"),modfsc,fun=max)
i=8
## llamo al raster
mod <- raster(lmod[i])
lmod[i]
(class(raster(lmod[i])))
raster(lmod[i])
m
mcdtipo[m]
paste(mcdtipo[m],i)
paste(mcdtipo[m],i,sep=";")
rm(list = ls())
suppressMessages(library("raster"))
### de acá debería salir la mod y la c.mod nada más!
rutas <- read.table("./.dir.txt",sep = ",",stringsAsFactors = F)
rcl <- function(x,y){reclassify(x, y, include.lowest=FALSE, right=NA)}
apoyo <- rutas[14,2]#"/home/lean/Dropbox/tesis/servermod/modis/apoyo/mascara_comp.tif"
apoyo <- paste0(apoyo,"mascara_comp.tif")
#mod   ##############################################################
dir.mbase <- rutas[7,2]#"/home/lean/Dropbox/tesis/servermod/modis/mod10base"
dir.mod <- rutas[5,2]#"/home/lean/Dropbox/tesis/servermod/modis/mod/"
dir.mod.c <- rutas[6,2]#"/home/lean/Dropbox/tesis/servermod/modis/c_mod/"
dir.mod.fsc <- rutas[20,2]#"/home/lean/Dropbox/tesis/servermod/modis/mod_fsc/"
#myd   ##############################################################
dir.mybase <- rutas[10,2]#"/home/lean/Dropbox/tesis/servermod/modis/myd10base"
dir.myd <- rutas[8,2]#"/home/lean/Dropbox/tesis/servermod/modis/myd/"
dir.myd.c <- rutas[9,2]#"/home/lean/Dropbox/tesis/servermod/modis/c_myd/"
dir.myd.fsc <- rutas[21,2]#"/home/lean/Dropbox/tesis/servermod/modis/myd_fsc/"
dir.mbase
write.csv(paste(mcdtipo[m],i,sep=";"),paste0(args[1],"/.wdimg.txt"),row.names = F)
mcdtipo <- c("MOD10A1","MYD10A1")
paste0(args[1],"/.wdimg.txt")
write.csv(paste(mcdtipo[m],i,sep=";"),paste0(args[1],"/.wdimg.txt"),row.names = F,col.names = F,quote = F)
i+1
rm(list = ls())
suppressMessages(library("raster"))
### de acá debería salir la mod y la c.mod nada más!
rutas <- read.table("./.dir.txt",sep = ",",stringsAsFactors = F)
args = commandArgs(trailingOnly=TRUE)
rcl <- function(x,y){reclassify(x, y, include.lowest=FALSE, right=NA)}
apoyo <- rutas[14,2]#"/home/lean/Dropbox/tesis/servermod/modis/apoyo/mascara_comp.tif"
apoyo <- paste0(apoyo,"mascara_comp.tif")
#mod   ##############################################################
dir.mbase <- rutas[7,2]#"/home/lean/Dropbox/tesis/servermod/modis/mod10base"
dir.mod <- rutas[5,2]#"/home/lean/Dropbox/tesis/servermod/modis/mod/"
dir.mod.c <- rutas[6,2]#"/home/lean/Dropbox/tesis/servermod/modis/c_mod/"
dir.mod.fsc <- rutas[20,2]#"/home/lean/Dropbox/tesis/servermod/modis/mod_fsc/"
#myd   ##############################################################
dir.mybase <- rutas[10,2]#"/home/lean/Dropbox/tesis/servermod/modis/myd10base"
dir.myd <- rutas[8,2]#"/home/lean/Dropbox/tesis/servermod/modis/myd/"
dir.myd.c <- rutas[9,2]#"/home/lean/Dropbox/tesis/servermod/modis/c_myd/"
dir.myd.fsc <- rutas[21,2]#"/home/lean/Dropbox/tesis/servermod/modis/myd_fsc/"
#   ##############################################################
### chequeo la info que se encuentra en mbase
if(length(list.files(dir.mbase))>=1){
p1 <- regexec("A[0-9]{6}",list.files(dir.mbase)[1])
pp1 <- dir.mbase
}else{
p1 <- regexec("A[0-9]{6}",list.files(dir.mybase)[1])
pp1 <- dir.mybase
}
p1 <- substr(list.files(pp1)[1],p1[[1]][1],p1[[1]][1]+7)
### lo primero que debo hacer es levantar las imágenes
## Variables temporales
### matríz para armar la imágenes de nubes
fsc.mosaic <- matrix(ncol=2,c(237,200,201,211,239,254,255,250,0,rep(NA,6),101))
FSC<- matrix(ncol = 2,data = c(-1,NA))
SCA <-as.matrix(data.frame(d1=c(-1,seq(1,101)), d2=c(2,rep(0,39),rep(1,61),2)))
CCA <-as.matrix(data.frame(d1=c(seq(-1,101)), d2=c(rep(0,102),1)))
# capa de apoyo!
bse <- (raster(apoyo)*0)-1
cat("\n")
cat(" Comenzando el proceso de reclasificación de las imágenes \n Y armado del producto combinado MOD.MYD \n")
cat(" En este proceso se calculan además todos los productos de nubes \n")
cat("iniciando la serie MOD \n")
cat("\n")
### directorio de descarga de las imágenes mod!!!
# lmyd <- list.files(path = dir.mybase,pattern = "*.tif",full.names = T)
# lmod <- list.files(path = dir.mbase,pattern = "*.tif",full.names = T)
dir1<- c(dir.mbase,dir.mybase)
dir2<- c(dir.mod.c,dir.myd.c)
dir3<- c(dir.mod,dir.myd)
dir4<- c(dir.mod.fsc,dir.myd.fsc)
dir<- c(dir.mod,dir.myd)
mcd <- list()
mcdtipo <- c("MOD10A1","MYD10A1")
cat("Ingresando al procesamiento \n")
### work sheet
source("/home/lean/CONICET/REPOS/nieve/funciones/functions.R")
p.tab <- read.csv("/home/lean/CONICET/REPOS/nieve/www/tabla_principal.csv",as.is = T)
for( i in 1:nrow(p.tab)){
print(p.tab$cca[i])
actuSnow(
shortname=p.tab$index[i],
data.location="/home/lean/CONICET/REPOS/nieve/",
poligono=paste0("/home/lean/CONICET/REPOS/nieve/cuencas/",p.tab$index[i],".kml"),
dataset="/home/lean/DATASETS/modis/mod_tap/",
img.salida="/img/",
snow.img="/mod_tap/",
series="/series/")
}
suppressMessages(file.remove(paste0(args[1],"/wdimg.txt")))
